//
//  TapeEquilibrium.ts (TypeScript, generated by: atom-typescript)
//  https://codility.com/public-report-detail/
//  https://codility.com/c/run/demoCUV8FQ-JZZ
//
//  Created by Isidoro Ghezzi on 4 July 2015.
//  Copyright (c) 2015 Isidoro Ghezzi. All rights reserved.
//

class IGUtil{
  public static log (theMessage){
    console.log (theMessage);
  }
}
class TapeEquilibrium{
  private fArray:number [];
  constructor (theArray:number[]){
    this.fArray = theArray;
  }

  public doIt = ():number =>{
    var aLeftSigma = 0;
    var aRightSigma = this.fArray.reduce(function (previousValue, currentValue){
        return previousValue + currentValue;
      }, 0);
    var aDeltas:number[] = [];
    this.fArray.slice(0, this.fArray.length - 1).forEach (function (value, index):void{
      aLeftSigma += value;
      aRightSigma -= value;
      aDeltas.push (Math.abs (aLeftSigma - aRightSigma));
    });
    IGUtil.log (aDeltas);
    return Math.min.apply (null, aDeltas);
  }
}

var solution = function (theArray:number[]){
  var aSolver:TapeEquilibrium = new TapeEquilibrium (theArray);
  return aSolver.doIt ();
}

var aTest = [
  [0,1],
  [3, 1, 2, 4, 3],
  [1, 2, 7],
  [-1, 3, -4, 5, 1, -6, 2, 1]
];
console.log (solution (aTest[0]));
