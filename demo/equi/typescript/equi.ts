//
//  equi.ts (TypeScript, generated by: atom-typescript)
//  https://codility.com/public-report-detail/
//  https://codility.com/c/run/demoCUV8FQ-JZZ
//
//  Created by Isidoro Ghezzi on 4 July 2015.
//  Copyright (c) 2015 Isidoro Ghezzi. All rights reserved.
//

class Equi{
  private fArray:number [];
  constructor (theArray:number[]){
    this.fArray = theArray;
  }

  public doIt = ():number =>{
    var aLeftSigma = 0;
    var aRightSigma = this.fArray.reduce(function (previousValue, currentValue){
        return previousValue + currentValue;
      }, 0);
    var aResults:number[] = [];
    var aCurrentIndex = -1;
    var aTemp = 0;
    var aSomeResult = this.fArray.some (function (value, index):boolean{
      aLeftSigma += aTemp;
      aRightSigma -= value;
      aTemp = value;
      // console.log ({index:index, aLeftSigma:aLeftSigma, aRightSigma:aRightSigma, aTemp:aTemp});
      var ret = aLeftSigma === aRightSigma;
      if (true === ret){
        aCurrentIndex = index;
        aResults.push (index);
      }
      return ret;
    });
    // console.log (aResults);
    return aCurrentIndex;
  }
}

var solution = function (theArray:number[]){
  var aEqui:Equi = new Equi (theArray);
  return aEqui.doIt ();
}
/*
var aTest = [
  [1, 2, 7],
  [-1, 3, -4, 5, 1, -6, 2, 1]
];
console.log (solution (aTest[1], aTest.length));
*/
